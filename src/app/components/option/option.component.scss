.option {
  width: 8.3125rem;
  height: 8.3125rem;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.9375rem;
  position: relative;
  transition: transform 0.2s ease-in-out;

  @media only screen and (min-width: 767px) {
    width: 12.375rem;
    height: 12.375rem;
  }

  // Modifier for the selected state
  &--selected {
    @media only screen and (min-width: 767px) {
      width: 18.3125rem;
      height: 18.3125rem;
      padding: 1.25rem;
    }
  }

  //Modifier for hover (applied only when isSelected = false)
  &--hoverable {
    &::after {
      content: "";
      position: absolute;
      width: 100%;
      height: 100%;
      border-radius: 50%;
      border: 1rem solid transparent;
      opacity: 1;
      transition: opacity 0.2s ease-in-out;
      cursor: pointer;
    }

    &:hover::after {
      border-color: rgba(128, 128, 128, 0.5);
      opacity: 1;
      cursor: pointer;
    }

    &:hover {
      transform: scale(1.05);
    }
  }

  //Pulsing modifier with 3 circles
  &--pulsing {
    .option__pulse {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) scale(1);
      border-radius: 50%;
      opacity: 0.3;
      animation: pulseAnimation 1.5s infinite ease-out;
      will-change: transform, opacity;
    }

    .option__pulse:nth-child(1) {
      width: 110%;
      height: 110%;
      background-color: rgba(255, 255, 255, 0.2);
      animation-delay: -1s;
    }

    .option__pulse:nth-child(2) {
      width: 120%;
      height: 120%;
      background-color: rgba(255, 255, 255, 0.4);
      animation-delay: -0.5s;
    }

    .option__pulse:nth-child(3) {
      width: 130%;
      height: 130%;
      background-color: rgba(255, 255, 255, 0.5);
      animation-delay: 0s;
    }
  }

  // Pulse animation
  @keyframes pulseAnimation {
    0% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 0.6;
    }
    100% {
      transform: translate(-50%, -50%) scale(2);
      opacity: 0;
    }
  }

  // Modifiers for option types
  &--scissors {
    background: radial-gradient(
      circle at center,
      var(--scissorsGradientStart),
      var(--scissorsGradientEnd)
    );

    @media only screen and (min-width: 767px) {
      img {
        width: 6rem;
        height: 6rem;
      }
    }
  }

  &--rock {
    background: radial-gradient(
      circle at center,
      var(--rockGradientStart),
      var(--rockGradientEnd)
    );

    @media only screen and (min-width: 767px) {
      img {
        width: 4.75rem;
        height: 4.75rem;
      }
    }
  }

  &--paper {
    background: radial-gradient(
      circle at center,
      var(--paperGradientStart),
      var(--paperGradientEnd)
    );

    @media only screen and (min-width: 767px) {
      img {
        width: 4.5625rem;
        height: 5.375rem;
      }
    }
  }

  // Special sizes for certain options
  @media only screen and (min-width: 767px) {
    &--selected.option--scissors img {
      width: 8.875rem;
      height: 8.875rem;
    }

    &--selected.option--rock img {
      width: 6.875rem;
      height: 7.8125rem;
    }

    &--selected.option--paper img {
      width: 6.75rem;
      height: 6.875rem;
    }
  }

  // Inside content of the circle
  &__content {
    background-color: white;
    border-radius: 50%;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    box-shadow: inset 0 0.375rem 0 rgba(0, 0, 0, 0.2);
  }

  &--empty {
    background-color: rgba(0, 0, 0, 0.1);
    @media only screen and (min-width: 767px) {
      width: 14rem;
      height: 14rem;
      border-radius: 50%;
    }
  }
}
